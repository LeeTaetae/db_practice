SELECT tp.ID ,tp.POST_TITLE , tu.USER_ADDRESS FROM TBL_POST tp JOIN TBL_USER tu ON  tp.USER_ID = tu.ID ORDER BY ID DESC;

SELECT tr.REPLY_CONTENT , tu.USER_EMAIL FROM TBL_REPLY tr JOIN TBL_USER tu ON tr.USER_ID = tu.ID WHERE REPLY_CONTENT LIKE '%한민%';

/*
 * SQL의 실행순서
 * 
 * FROM > JOIN > ON > WHERE > GROUP BY > HAVING > SELECT > ORDER BY
 * 
 * */

--구매자
-- 이름, 나이, 성별, 주소, 핸드폰
CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
	ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
	BUYER_NAME VARCHAR2(255) NOT NULL,
	BUYER_AGE NUMBER,
	BUYER_GENDER CHAR(10) CONSTRAINT GENDER_TYPE CHECK(BUYER_GENDER IN ('남', '여')),
	BUYER_ADDRESS VARCHAR2(255) NOT NULL,
	BUYER_PHONE VARCHAR2(255) NOT NULL
);

DROP TABLE TBL_BUYER;
DROP TABLE TBL_ORDER;
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_BRAND VARCHAR2(255) NOT NULL,
	PRODUCT_NAME VARCHAR2(255) NOT NULL,
	PRODUCT_PRICE NUMBER NOT NULL,
	PRODUCT_STOCK NUMBER DEFAULT 999
);

CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
	ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	ORDER_STATUS VARCHAR2(255) DEFAULT '배송 중',
	ORDER_START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	ORDER_END_DATE TIMESTAMP,
	BUYER_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_ORDER_BUYER FOREIGN KEY(BUYER_ID)
	REFERENCES TBL_BUYER(ID),
	CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);

INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '짱구', 40, '남', '서울시 강남구', '010-3344-1234');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '유리', 20, '여', '서울시 종로구', '010-7848-5656');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '맹구', 35, '남', '서울시 노원구', '010-1313-7854');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '철수', 30, '남', '서울시 용산구', '010-5533-7711');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '훈이', 40, '남', '경기도 남양주시', '010-1234-5678');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '수지', 40, '여', '서울시 강북구', '010-4542-8753');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '봉미선', 50, '여', '서울시 강북구', '010-3456-7575');
INSERT INTO TBL_BUYER VALUES(SEQ_BUYER.NEXTVAL, '이태희', 20, '여', '서울시 스카이캐슬', '010-1122-4444');

INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '뉴발란스', '브리즈 신발', 139000, 500);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '아디다스', '후드집업', 119000, 250);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '아크테릭스', '후드티', 290000, 100);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '로라로라', '반팔 티셔츠', 38700, 600);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, 'MLB', '볼캡', 49000, 30);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '무신사', '스웨이드 가디건', 95800, 170);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '스웨이드', '청바지', 57600, 310);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '스파오', '반팔 티셔츠', 25900, 120);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '아이더', '캐시미어 자켓', 618420, 50);
INSERT INTO TBL_PRODUCT VALUES(SEQ_PRODUCT.NEXTVAL, '스텐리', '텀블러', 62000, 550);


INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 1, 7);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 2, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 4, 5);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 4, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 4, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 5, 2);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 5, 7);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 5, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 6, 7);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 6, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 6, 2);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 5, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 2, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 7, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 7, 2);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 7, 6);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 7, 5);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 7, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 8);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 10);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 9);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 4, 9);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 3, 10);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 8, 10);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 8, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 8, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID) VALUES(SEQ_ORDER.NEXTVAL, 8, 9);

-- 주문자 정보 조회
-- 주문날짜, 사용자 이름
SELECT tor.ORDER_START_DATE AS "주문날짜", tbb.BUYER_NAME AS "주문자" FROM TBL_ORDER tor JOIN TBL_BUYER tbb ON tor.BUYER_ID = tbb.ID	;

-- 가장 인기많은 상품을 구매한 사용자의 정보와 상품이름을 조회
SELECT TBO.PRODUCT_ID, TBO.BUYER_ID FROM TBL_ORDER TBO  WHERE ID = (SELECT PRODUCT_ID FROM TBL_ORDER GROUP BY PRODUCT_ID HAVING COUNT(PRODUCT_ID) = (SELECT MAX(COUNT(PRODUCT_ID)) FROM TBL_ORDER GROUP BY PRODUCT_ID));
SELECT PRODUCT_ID FROM TBL_ORDER GROUP BY PRODUCT_ID HAVING COUNT(PRODUCT_ID) = (SELECT MAX(COUNT(PRODUCT_ID)) FROM TBL_ORDER GROUP BY PRODUCT_ID);
SELECT MAX(COUNT(PRODUCT_ID)) FROM TBL_ORDER GROUP BY PRODUCT_ID;

SELECT TBU.*, TBP.PRODUCT_NAME
FROM (
   SELECT *
   FROM TBL_ORDER TBO
   WHERE PRODUCT_ID = (
      SELECT PRODUCT_ID
      FROM TBL_ORDER
      GROUP BY PRODUCT_ID
      HAVING COUNT(PRODUCT_ID) = (
         SELECT MAX(COUNT(PRODUCT_ID))
         FROM TBL_ORDER
         GROUP BY PRODUCT_ID
      )
   )
) TBO
JOIN TBL_BUYER TBU
ON TBO.BUYER_ID = TBU.ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;


SELECT * FROM TBL_ORDER TBO JOIN TBL_BUYER TBB ON TBO.BUYER_ID = TBB.ID JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID WHERE TBP.ID = (SELECT PRODUCT_ID FROM TBL_ORDER GROUP BY PRODUCT_ID HAVING COUNT(PRODUCT_ID) = (SELECT MAX(COUNT(PRODUCT_ID)) FROM TBL_ORDER GROUP BY PRODUCT_ID));

-- 1) 상품 이름과 총 판매 매출 조회
SELECT PRODUCT_NAME, SUM(PRODUCT_PRICE) FROM TBL_PRODUCT GROUP BY PRODUCT_NAME;
SELECT PRODUCT_NAME, SUM(PRODUCT_PRICE) FROM TBL_ORDER TBO JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID GROUP BY PRODUCT_NAME;
-- 2) 상품을 구매한 20 ~ 30대 구매자의 수 조회
SELECT COUNT(ID) FROM TBL_BUYER WHERE  BUYER_AGE < = 39;
SELECT COUNT(TBB.ID) FROM TBL_ORDER TBO JOIN TBL_BUYER TBB ON TBO.BUYER_ID = TBB.ID WHERE TBB.ID = (SELECT COUNT(ID) FROM TBL_BUYER WHERE  BUYER_AGE <= 39);
-- 3) 뉴발란스를 구매한 20대 구매자의 이름 조회
SELECT BUYER_NAME FROM TBL_BUYER WHERE BUYER_AGE = 20;
SELECT TBB.BUYER_NAME FROM TBL_ORDER TBO JOIN TBL_BUYER TBB ON TBO.BUYER_ID = TBB.ID WHERE TBB.ID IN (SELECT ID FROM TBL_BUYER WHERE BUYER_AGE = 20);
SELECT * FROM TBL_PRODUCT WHERE PRODUCT_BRAND LIKE'%뉴발란스%';

SELECT TBB.BUYER_NAME, TBB.BUYER_AGE 
FROM TBL_ORDER TBO 
JOIN TBL_BUYER TBB 
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID 
WHERE TBB.BUYER_AGE = 20 
AND TBP.ID = (SELECT ID FROM TBL_PRODUCT WHERE PRODUCT_BRAND LIKE'%뉴발란스%');

-- 여성의 나이대별 평균 지출 금액 조회
SELECT BUYER_AGE FROM TBL_BUYER WHERE BUYER_GENDER LIKE '%여%';
SELECT AVG(PRODUCT_PRICE) FROM TBL_PRODUCT;
SELECT AVG(PRODUCT_PRICE) FROM TBL_ORDER TBO JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID; 
SELECT AVG(PRODUCT_PRICE) 
FROM TBL_ORDER TBO 
JOIN TBL_BUYER TBB 
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID 
WHERE BUYER_GENDER LIKE '%여%' ;

-- 쇼핑몰의 총 판매 액수 조회
SELECT SUM(PRODUCT_PRICE) FROM TBL_ORDER TBO JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID;

-- 가장 매출이 적은 상품을 구매한 사용자의 이름과, 상품명 조회
SELECT TBB.BUYER_NAME FROM TBL_ORDER TBO JOIN TBL_BUYER TBB ON TBO.BUYER_ID = TBB.ID;
SELECT MIN(SUM (PRODUCT_PRICE)) FROM TBL_PRODUCT GROUP BY ID;
SELECT SUM(PRODUCT_PRICE) FROM TBL_PRODUCT GROUP BY ID;
SELECT TBB.BUYER_NAME, TBP.PRODUCT_NAME 
FROM TBL_ORDER TBO 
JOIN TBL_BUYER TBB 
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID 
WHERE TBP.PRODUCT_PRICE = (SELECT MIN(SUM (PRODUCT_PRICE)) FROM TBL_PRODUCT GROUP BY PRODUCT_NAME);

-- 경기도에 거주한 사람이 구매한 상품과, 사용자 정보를 조회
SELECT * FROM TBL_BUYER WHERE BUYER_ADDRESS LIKE '%경기%';
SELECT TBB.*, TBP.* 
FROM TBL_ORDER TBO 
JOIN TBL_BUYER TBB 
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID 
WHERE TBB.ID = (SELECT ID FROM TBL_BUYER WHERE BUYER_ADDRESS LIKE '%경기%');

--30대 남성이 가장 많이 구매한 상품의 이름 조회
SELECT * FROM TBL_BUYER WHERE BUYER_AGE >= 30 AND BUYER_AGE < 40 AND BUYER_GENDER LIKE '%남%';
SELECT MAX(COUNT(ID)) FROM TBL_PRODUCT GROUP BY  ID HAVING MAX(ID) = (SELECT COUNT(ID) FROM TBL_PRODUCT);

SELECT * FROM (
	SELECT PRODUCT_NAME, COUNT(PRODUCT_NAME)
	FROM TBL_ORDER TBO 
	JOIN TBL_BUYER TBB 
	ON TBO.BUYER_ID = TBB.ID 
	JOIN TBL_PRODUCT TBP 
	ON TBO.PRODUCT_ID = TBP.ID 
	WHERE TBB.ID IN (SELECT ID FROM TBL_BUYER WHERE (BUYER_AGE >= 30 AND BUYER_AGE < 40 AND BUYER_GENDER LIKE '%남%'))
	GROUP BY PRODUCT_NAME
	ORDER BY COUNT(PRODUCT_NAME) DESC 
)
WHERE ROWNUM = 1;




--9) 가장 적게 판매된 상품의 이름
SELECT SUM(PRODUCT_PRICE), PRODUCT_NAME FROM TBL_PRODUCT GROUP BY PRODUCT_NAME;  
SELECT TBP.PRODUCT_NAME FROM TBL_ORDER TBO JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID WHERE TBP.PRODUCT_PRICE IN (SELECT MIN(SUM(PRODUCT_PRICE)) FROM TBL_PRODUCT GROUP BY PRODUCT_PRICE);
--10) 평균 나이보다 많은 사용자들이 구매한 상품과 사용자의 정보 조회
SELECT AVG(BUYER_AGE) FROM TBL_BUYER;
SELECT TBP.*, TBB.* FROM TBL_ORDER TBO JOIN TBL_BUYER TBB ON TBO.BUYER_ID = TBB.ID JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID WHERE TBB.BUYER_AGE > (SELECT AVG(BUYER_AGE) FROM TBL_BUYER);
--11) 20대 여성이 구매한 상품 이름과 주문 건수 조회
SELECT * FROM TBL_BUYER WHERE BUYER_AGE >= 20 AND BUYER_AGE <30 AND BUYER_GENDER LIKE '%여%';
SELECT PRODUCT_NAME, COUNT(TBO.ID) FROM TBL_ORDER TBO JOIN TBL_BUYER TBB ON TBO.BUYER_ID = TBB.ID JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID WHERE TBB.ID IN (SELECT ID FROM TBL_BUYER WHERE BUYER_AGE >= 20 AND BUYER_AGE <30 AND BUYER_GENDER LIKE '%여%') GROUP BY PRODUCT_NAME;
--12) 가장 인기가 없는 상품 조회
SELECT MIN(TBP.PRODUCT_NAME) FROM TBL_ORDER TBO JOIN TBL_PRODUCT TBP ON TBO.PRODUCT_ID = TBP.ID; 
