/*
   요구사항
   음료수 판매 업체입니다. 음료수마다 당첨번호가 있습니다. 
   음료수의 당첨번호는 1개이고 당첨자의 정보를 알아야 상품을 배송할 수 있습니다.
   당첨 번호마다 당첨 상품이 있고, 당첨 상품이 배송 중인지 배송 완료인지 구분해야 합니다.
*/
--사용자
-- 주문 - FK 사용자, FK 음료수
-- 운 FK 음료수
-- 상품
-- 추첨 FK 운, FK 상품
-- 배송 FK상품, FK 사용자

--CREATE SEQUENCE SEQ_WIN_NUMBER;
--CREATE TABLE TBL_WIN_NUMBER(
--	ID NUMBER CONSTRAINT PK_WIN_NUMBER PRIMARY KEY,
--	WIN_NUMBER_NUMBER NUMBER UNIQUE NOT NULL,
--	DRINK_ID NUMBER,
--	PRIZE_ID NUMBER,
--	CONSTRAINT FK_WIN_NUMBER_DRINK FOREIGN KEY(DRINK_ID)
--	REFERENCES TBL_DRINK,
--	CONSTRAINT FK_WIN_NUMBER_PRIZE FOREIGN KEY(PRIZE_ID)
--	REFERENCES TBL_PRIZE
--);
--
--
--
--CREATE SEQUENCE SEQ_DRINK;
--CREATE TABLE TBL_DRINK(
--	ID NUMBER CONSTRAINT PK_DRINK PRIMARY KEY,
--	DRINK_NAME VARCHAR2(255) UNIQUE NOT NULL,
--	DRINK_PRICE NUMBER,
--	DRINK_STOCK NUMBER DEFAULT 999,
--	DRINTK_WIN_MAKE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
--);
--
--CREATE  SEQUENCE SEQ_PRIZE;
--CREATE TABLE TBL_PRIZE(
--	ID NUMBER CONSTRAINT PK_PRIZE PRIMARY KEY,
--	PRIZE_NAME VARCHAR2(255) NOT NULL UNIQUE,
--	PRIZE_STOCK NUMBER DEFAULT 999
--);
--
--CREATE SEQUENCE SEQ_WINNER;
--CREATE TABLE TBL_WINNER(
--	ID NUMBER CONSTRAINT PK_WINNER PRIMARY KEY,
--	WINNER_NAME VARCHAR2(255) NOT NULL,
--	WINNER_ADDRESS VARCHAR2(255) NOT NULL,
--	WINNER_PHONE VARCHAR2(255) NOT NULL
--); 	
--
--DROP TABLE TBL_WINNER;
--
--CREATE  SEQUENCE SEQ_WINNER_ORDER;
--CREATE TABLE TBL_WINNER_ORDER(
--	WINNER_ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--	WINNER_ID,
--	DRINK_ID,
--	CONSTRAINT FK_WINNER_ORDER_WINNER FOREIGN KEY(WINNER_ID)
--	REFERENCES TBL_WINNER(ID),
--	CONSTRAINT FK_WINNER_ORDER_DRINK FOREIGN KEY(DRINK_ID)
--	REFERENCES TBL_DRINK(ID)
--);
--
--DROP TABLE TBL_WINNER_ORDER;
--
--CREATE SEQUENCE SEQ_DELIVERY;
--CREATE TABLE TBL_DELIVERY(
--	ID DELIVERY CONSTRAINT PK_DELIVERY PRIMARY KEY,
--	DELIVERY_STATUS CHAR(10) DEFAULT '배송 중',
--	WINNER_ID NUMBER,
--	WIN_NUMBER_ID NUMBER,
--	CONSTRAINT FK_DELIVERY_WINNER FOREIGN KEY(WINNER_ID)
--	REFERENCES TBL_WINNER(ID),
--	CONSTRAINT FK_DELIVERY_WIN_NUMBER FOREIGN KEY(WIN_NUMBER_ID)
--	REFERENCES TBL_WIN_NUMBER(ID)
--);


/*
요구사항
   이커머스 창업 준비중입니다. 
   기업과 사용자 간 거래를 위해 기업의 정보와 사용자 정보가 필요합니다.
   기업의 정보는 기업 이름, 주소, 대표번호가 있고
   사용자 정보는 이름, 주소, 전화번호가 있습니다. 
   결제 시 사용자 정보와 기업의 정보, 결제한 카드의 정보 모두 필요하며,
   상품의 정보도 필요합니다. 상품의 정보는 이름, 가격, 재고입니다.
   사용자는 등록한 카드의 정보를 저장할 수 있으며, 
   카드의 정보는 카드번호, 카드사, 회원 정보가 필요합니다.
*/


CREATE SEQUENCE SEQ_PRODUCT3;
CREATE TABLE TBL_PRODUCT3(
	ID NUMBER CONSTRAINT PK_PRODUCT3 PRIMARY KEY,
	PRODUCT3_NAME VARCHAR2(255) NOT NULL,
	PRODUCT3_PRICE NUMBER NOT NULL,
	PRODUCT3_STOCK NUMBER DEFAULT 999
	CONSTRAINT FK_PRODUCT3_COMPANY2 FOREIGN KEY(COMPANY2_ID)
	REFERENCES TBL_PRODUCT3(ID)
);

CREATE SEQUENCE SEQ_CARD_USER;
CREATE TABLE TBL_CARD_USER(
	ID NUMBER CONSTRAINT PK_CARD_USER PRIMARY KEY,
	CARD_USER_NAME CHAR(20) NOT NULL,
	CARD_USER_ADDRESS VARCHAR2(255) NOT NULL,
	CARD_USER_PHONE VARCHAR2(255)
);

CREATE SEQUENCE SEQ_CARD;
CREATE TABLE TBL_CARD(
	ID NUMBER CONSTRAINT PK_CARD PRIMARY KEY,
	CARD_NUMBER VARCHAR2(255) NOT NULL UNIQUE,
	CARD_COMPANY VARCHAR2(255) NOT NULL,
	CARD_USER_ID NUMBER,
	CONSTRAINT FK_CARD_CARD_USER FOREIGN KEY(CARD_USER_ID)
	REFERENCES TBL_CARD_USER(ID)
);

CREATE SEQUENCE SEQ_COMPANY2;
CREATE TABLE TBL_COMPANY2(
	ID NUMBER CONSTRAINT PK_COMPANY2 PRIMARY KEY,
	COMPANY2_NAME VARCHAR2(255) NOT NULL UNIQUE,
	COMPANY2_ADDRESS VARCHAR2(255) NOT NULL,
	COMPANY2_PHONE VARCHAR2(255) NOT NULL
);


CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
	ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
	PRODUCT3_ID NUMBER NOT NULL,
	CARD_USER_ID NUMBER NOT NULL,
	CONSTRAINT FK_ORDER_PRODUCT3 FOREIGN KEY(PRODUCT3_ID)
	REFERENCES TBL_PRODUCT3(ID),
	CONSTRAINT FK_ORDER_CARD_USER FOREIGN KEY(CARD_USER_ID)
	REFERENCES TBL_CARD_USER(ID)
);

CREATE SEQUENCE SEQ_PAYMENT;
CREATE TABLE TBL_PAYMENT(
	ID NUMBER CONSTRAINT PK_PAYMENT PRIMARY KEY,
	COMPANY2_ID NUMBER NOT NULL,
	CARD_ID NUMBER NOT NULL,
	ORDER_ID NUMBER NOT NULL,
	CONSTRAINT FK_PAYMENT_COMPANY2 FOREIGN KEY(COMPANY2_ID)
	REFERENCES TBL_COMPANY2(ID),
	CONSTRAINT FK_PAYMENT_CARD FOREIGN KEY(CARD_ID)
	REFERENCES TBL_CARD(ID),
	CONSTRAINT FK_PAYMENT_ORDER FOREIGN KEY(ORDER_ID)
	REFERENCES TBL_ORDER(ID)
);

-- 사용자 추가
INSERT INTO TBL_CARD_USER
  (ID, CARD_USER_NAME, CARD_USER_ADDRESS, CARD_USER_PHONE)
VALUES
  (SEQ_CARD_USER.NEXTVAL, '홍', '서울시 강남구', '010-1111-2222');

INSERT INTO TBL_CARD_USER
  (ID, CARD_USER_NAME, CARD_USER_ADDRESS, CARD_USER_PHONE)
VALUES
  (SEQ_CARD_USER.NEXTVAL, '김', '부산시 해운대구', '010-3333-4444');
 
 SELECT * FROM TBL_CARD_USER;
 -- 2) 카드 (각 사용자에 연결)
INSERT INTO TBL_CARD
  (ID, CARD_NUMBER, CARD_COMPANY, CARD_USER_ID)
VALUES
  (SEQ_CARD.NEXTVAL, '1111-2222-3333-4444', '신한카드', 2);

INSERT INTO TBL_CARD
  (ID, CARD_NUMBER, CARD_COMPANY, CARD_USER_ID)
VALUES
  (SEQ_CARD.NEXTVAL, '5555-6666-7777-8888', '삼성카드', 3);
 
 -- 3) 상품
INSERT INTO TBL_PRODUCT3
  (ID, PRODUCT3_NAME, PRODUCT3_PRICE, PRODUCT3_STOCK)
VALUES
  (SEQ_PRODUCT3.NEXTVAL, '무선 마우스', 25000, 100);

INSERT INTO TBL_PRODUCT3
  (ID, PRODUCT3_NAME, PRODUCT3_PRICE, PRODUCT3_STOCK)
VALUES
  (SEQ_PRODUCT3.NEXTVAL, '기계식 키보드', 80000, 50);
 
 -- 4) 기업
INSERT INTO TBL_COMPANY2
  (ID, COMPANY2_NAME, COMPANY2_ADDRESS, COMPANY2_PHONE)
VALUES
  (SEQ_COMPANY2.NEXTVAL, '테크주식회사', '서울시 송파구', '02-123-4567');

INSERT INTO TBL_COMPANY2
  (ID, COMPANY2_NAME, COMPANY2_ADDRESS, COMPANY2_PHONE)
VALUES
  (SEQ_COMPANY2.NEXTVAL, '디지털상사', '부산시 수영구', '051-987-6543');
 
 -- 5) 주문 (사용자+상품)
INSERT INTO TBL_ORDER
  (ID, PRODUCT3_ID, CARD_USER_ID)
VALUES
  (SEQ_ORDER.NEXTVAL, 1, 2);

INSERT INTO TBL_ORDER
  (ID, PRODUCT3_ID, CARD_USER_ID)
VALUES
  (SEQ_ORDER.NEXTVAL, 2, 3);
SELECT * FROM  TBL_CARD;
 
-- 6) 결제 (기업+카드+주문)
INSERT INTO TBL_PAYMENT
  (ID, COMPANY2_ID, CARD_ID, ORDER_ID)
VALUES
  (SEQ_PAYMENT.NEXTVAL, 1, 3, 2);

INSERT INTO TBL_PAYMENT
  (ID, COMPANY2_ID, CARD_ID, ORDER_ID)
VALUES
  (SEQ_PAYMENT.NEXTVAL, 2, 4, 2);
 
SELECT * FROM TBL_PAYMENT;

SELECT * FROM TBL_ORDER ;
SELECT tablespace_name, bytes, max_bytes FROM user_ts_quotas;
SELECT username, default_tablespace FROM user_users;
SELECT tablespace_name, bytes, max_bytes
FROM user_ts_quotas;



